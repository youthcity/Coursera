・除最内层循环外，从最内层循环开始，置所有其他层的循环为最小值；

　　・对最内层循环做简单循环的全部测试。测试时保持所有外层循环的循环变量为最小值。另外，对越界值和非法值做类似的测试。

　　・逐步外推，对其外面一层循环进行测试。测试时保持所有外层循环的循环变量取最小值，所有其它嵌套内层循环的循环变量取“典型”值。

　　・反复进行，直到所有各层循环测试完毕。

　　・对全部各层循环同时取最小循环次数，或者同时取最大循环次数。对于后一种测试，由于测试量太大，需人为指定最大循环次数。



条件/判定覆盖
修正的条件/判定覆盖
从最内层循环开始，故将最外层层循环设为最小，值为0；
测试结果如下
黄色的部分为存在分支没有覆盖到的地方，红色的为分支没有覆盖到

提醒大家注意：设计测试用例时，题目要求注意对循环结构的测试，即不管符合哪种覆盖要求，都要在后面加上对循环结构路径测试所设计的测试用例


        for (int i = 0; i < arr.length; i++) { 
        	if(x == i || weight <=100 ){
        		
            for (int j = 0; j < arr[i].length; j++) {       
                if(y == j && weight <=50){
                	if(arr[i][j] == num ){

i < arr.length	a
x == i || weight <=100 	c
j < arr[i].length	b
y == j && weight <=50	d
arr[i][j] == num	e






设计原理



语句覆盖
语句覆盖= （被执行的语句数量/总的语句数量）×100%

判定覆盖
覆盖率= （被执行的分支数量/总的分支数量）×100%


条件组合测试

条件组合覆盖的基本思想是设计足够的测试用例，使得判断中每个条件的所有可能至少出现一次，并且每个判断本身的判定结果也至少出现一次。










